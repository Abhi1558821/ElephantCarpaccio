package com.elephantcarpaccio.ui.additem;

import com.elephantcarpaccio.model.Item;
import com.elephantcarpaccio.model.StateTax;

import java.util.List;

public interface AddItemContract {

    interface View {
        void close();

        /**
         * Method used to display @{@link Item} object selected by user
         *
         * @param item selected @{@link Item} object for edit
         */
        void displayUI(Item item);
    }

    interface Presenter {

        /**
         * Method validates the name.
         *
         * @param itemName name of item entered by user.
         * @return A boolean value if itemName is proper.
         */
        boolean validateItemName(String itemName);

        /**
         * Method validates the quantity.
         *
         * @param quantity of item entered by user .
         * @return A boolean value if quantity is proper.
         */
        boolean validateItemQuantity(String quantity);

        /**
         * Method validates the unit price.
         *
         * @param unitPrice of item entered by user .
         * @return A boolean value if unitPrice is proper.
         */
        boolean validateUnitPrice(String unitPrice);

        /**
         * Method validates the State {@link Item} object.
         *
         * @param state selected by user
         * @return A boolean value if state is proper.
         */
        boolean validateState(String state);

        /**
         * Method save the {@link Item} object.
         *
         * @param item create {@link Item} object from user input and save.
         */
        void saveItem(Item item);

        /**
         * Method used to retrieve all the @{@link StateTax}
         *
         * @return Collection of @{@link StateTax}
         */
        List<String> getAllStates();

        /**
         * Method used to retrieve @{@link Item} from given id
         *
         * @param id long id generated by database
         */
        void retrieveItem(long id);

        /**
         * Method update the given {@link Item} object.
         *
         * @param item update {@link Item} object from user input and save.
         */
        void updateItem(Item item);

    }
}
